openapi: 3.0.0
info:
  title: User API Docs
  version: 1.0.0
  description: User API Docs
tags:
  - name: Keycloak Client
    description: Authentication
  - name: Keycloak Admin Client
    description: Keycloak Admin Client
servers:
  - url: https://lemur-7.cloud-iam.com/auth/realms/gmky
    description: Keycloak DEV
paths:
  /protocol/openid-connect/token:
    post:
      summary: Login with username and password
      description: Login with username and password keycloak
      operationId: loginWithUsernameAndPassword
      tags:
        - Keycloak Client
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeycloakLoginWithUsernameAndPasswordRequest'
      responses:
        200:
          description: Token detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeycloakLoginWithUsernameAndPasswordResponse'
  /protocol/openid-connect/userinfo:
    get:
      summary: Get current user info
      description: Get current user info
      operationId: getCurrentUserInfo
      tags:
        - Keycloak Client
      parameters:
        - in: header
          name: Authorization
          description: Authorization token
          schema:
            type: string
      responses:
        200:
          description: Current user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeycloakUserInfo'
  /users:
    post:
      summary: Create new users
      description: Create new users
      operationId: createUser
      tags:
        - Keycloak Admin Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakAdminCreateUserRequest'
      responses:
        201:
          description: Created
    get:
      summary: Get user by username
      description: Get user by username
      operationId: getUserByUsername
      tags:
        - Keycloak Admin Client
      parameters:
        - in: query
          name: username
          required: true
          schema:
            type: string
      responses:
        200:
          description: User info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRepresentation'
  /users/{userId}:
    parameters:
      - $ref: '#/components/parameters/userId'
    put:
      summary: Update user by user ID
      description: Update user by user ID
      operationId: updateUserByUserId
      tags:
        - Keycloak Admin Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRepresentation'
      responses:
        200:
          description: Update successfully
          content:
            application/json: {}
  /users/{userId}/logout:
    parameters:
      - $ref: '#/components/parameters/userId'
    post:
      summary: Remove all user sessions
      description: Remove all user sessions
      operationId: logout
      tags:
        - Keycloak Admin Client
      responses:
        200:
          description: Logged out
          content:
            application/json: {}
components:
  parameters:
    userId:
      in: path
      name: userId
      required: true
      schema:
        type: string
  schemas:
    KeycloakLoginWithUsernameAndPasswordRequest:
      type: object
      properties:
        grant_type:
          type: string
          default: "password"
        client_id:
          type: string
        client_secret:
          type: string
        username:
          type: string
        password:
          type: string
        scope:
          type: string
          default: "openid"
    KeycloakLoginWithUsernameAndPasswordResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          format: int64
        refresh_expires_in:
          type: integer
          format: int64
        refresh_token:
          type: string
        token_type:
          type: string
        id_token:
          type: string
        not-before-policy:
          type: integer
        session_state:
          type: string
        scope:
          type: string
    KeycloakUserInfo:
      type: object
      properties:
        sub:
          type: string
        email_verified:
          type: boolean
        name:
          type: string
        preferred_username:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        email:
          type: string
    KeycloakAdminCreateUserRequest:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        emailVerified:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        enabled:
          type: boolean
        groups:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/KeycloakCredentialInfo'
    KeycloakCredentialInfo:
      type: object
      properties:
        temporary:
          type: boolean
        type:
          type: string
        value:
          type: string
      required:
        - temporary
        - type
        - value
    UserRepresentation:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        enabled:
          type: boolean